{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.jsx","components/Statistics/Notification.jsx","components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","App.js","index.js","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css"],"names":["module","exports","Section","children","title","className","s","section","Notification","message","Statistics","feedbacks","feedbackTitles","Object","keys","total","values","reduce","acc","value","list","map","item","listItem","itemName","itemVal","totalFeedbacks","res","Math","round","good","isNaN","countPositiveFeedbackPercentage","FeedbackOptions","onLeaveFeedback","button","type","onClick","App","useState","setGood","neutral","setNeutral","bad","setBad","target","prev","ReactDOM","render","StrictMode","document","querySelector"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,6BAA6B,QAAU,8B,iHCcrFC,MAZf,YAAuC,IAApBC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,MAC3B,OACE,0BAASC,UAAWC,IAAEC,QAAtB,UACE,oBAAIF,UAAWC,IAAEF,MAAjB,SAAyBA,IACxBD,MCLQ,SAASK,EAAT,GAAoC,IAAZC,EAAW,EAAXA,QACrC,OAAO,4BAAIA,I,oBCCE,SAASC,EAAT,GAAoC,IAAdC,EAAa,EAAbA,UAC7BC,EAAiBC,OAAOC,KAAKH,GAC7BI,EAAQF,OAAOG,OAAOL,GAAWM,QAAO,SAACC,EAAKC,GAAN,OAAgBD,EAAMC,IAAO,GAO3E,OAAIJ,EAAQ,EACH,cAACP,EAAD,CAAcC,QAAQ,sBAG7B,qBAAIJ,UAAWC,IAAEc,KAAjB,UACGR,EAAeS,KAAI,SAAAC,GAClB,OACE,qBAAIjB,UAAWC,IAAEiB,SAAjB,UACE,uBAAMlB,UAAWC,IAAEkB,SAAnB,UAA8BF,EAA9B,OACA,sBAAMjB,UAAWC,IAAEmB,QAAnB,SAA6Bd,EAAUW,OAFTA,MAMpC,qBAAIjB,UAAWC,IAAEiB,SAAjB,UACE,sBAAMlB,UAAWC,IAAEkB,SAAnB,oBACA,sBAAMnB,UAAWC,IAAEmB,QAAnB,SAA6BV,MAFA,SAI/B,qBAAIV,UAAWC,IAAEiB,SAAjB,UACE,sBAAMlB,UAAWC,IAAEkB,SAAnB,gCACA,uBAAMnB,UAAWC,IAAEmB,QAAnB,UAxBkC,SAAAC,GACtC,IAAMC,EAAMC,KAAKC,MAAOlB,EAAUmB,KAAOJ,EAAkB,KAC3D,OAAOK,MAAMJ,GAAO,EAAIA,EAuBjBK,CAAgCjB,GADnC,SAF6B,uB,oBC3BtB,SAASkB,EAAT,GAA0D,IAA/BtB,EAA8B,EAA9BA,UAAWuB,EAAmB,EAAnBA,gBAC7CtB,EAAiBC,OAAOC,KAAKH,GACnC,OACE,mCACGC,EAAeS,KAAI,SAAAC,GAClB,OACE,wBAEEjB,UAAWC,IAAE6B,OACbC,KAAK,SACLjB,MAAOG,EACPe,QAASH,EALX,SAOGZ,GAPH,UACUA,EADV,gBCHK,SAASgB,IAAO,IAAD,EACJC,mBAAS,GADL,mBACrBT,EADqB,KACfU,EADe,OAEED,mBAAS,GAFX,mBAErBE,EAFqB,KAEZC,EAFY,OAGNH,mBAAS,GAHH,mBAGrBI,EAHqB,KAGhBC,EAHgB,KAKtBjC,EAAY,CAAEmB,OAAMW,UAASE,OAmBnC,OACE,qCACE,cAAC,EAAD,CAASvC,MAAM,wBAAf,SACE,cAAC6B,EAAD,CACEtB,UAAWA,EACXuB,gBAtBkB,SAAC,GACzB,OADmD,EAAxBW,OAAU1B,OAEnC,IAAK,OACHqB,GAAQ,SAAAM,GAAI,OAAIA,EAAO,KACvB,MACF,IAAK,UACHJ,GAAW,SAAAI,GAAI,OAAIA,EAAO,KAC1B,MACF,IAAK,MACHF,GAAO,SAAAE,GAAI,OAAIA,EAAO,WAgBxB,cAAC,EAAD,CAAS1C,MAAM,aAAf,SACE,cAACM,EAAD,CAAYC,UAAWA,SClC/BoC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACX,EAAD,MAEFY,SAASC,cAAc,W,kBCRzBnD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.6b86b71c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__2VgCY\",\"itemName\":\"Statistics_itemName__19pDy\",\"itemVal\":\"Statistics_itemVal__up3k3\"};","import s from './Section.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nfunction Section({ children, title }) {\r\n  return (\r\n    <section className={s.section}>\r\n      <h2 className={s.title}>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\nSection.propTypes = {\r\n  children: PropTypes.object.isRequired,\r\n  title: PropTypes.string.isRequired,\r\n};\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nexport default function Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport Notification from './Notification';\r\nimport s from './Statistics.module.css';\r\n\r\nexport default function Statistics({ feedbacks }) {\r\n  const feedbackTitles = Object.keys(feedbacks);\r\n  const total = Object.values(feedbacks).reduce((acc, value) => acc + value, 0);\r\n\r\n  const countPositiveFeedbackPercentage = totalFeedbacks => {\r\n    const res = Math.round((feedbacks.good / totalFeedbacks) * 100);\r\n    return isNaN(res) ? 0 : res;\r\n  };\r\n\r\n  if (total < 1) {\r\n    return <Notification message=\"No feedback given\"></Notification>;\r\n  }\r\n  return (\r\n    <ul className={s.list}>\r\n      {feedbackTitles.map(item => {\r\n        return (\r\n          <li className={s.listItem} key={item}>\r\n            <span className={s.itemName}>{item}:</span>\r\n            <span className={s.itemVal}>{feedbacks[item]}</span>\r\n          </li>\r\n        );\r\n      })}\r\n      <li className={s.listItem} key=\"Total\">\r\n        <span className={s.itemName}>Total:</span>\r\n        <span className={s.itemVal}>{total}</span>\r\n      </li>\r\n      <li className={s.listItem} key=\"PositiveFeedback\">\r\n        <span className={s.itemName}>Positive feedback:</span>\r\n        <span className={s.itemVal}>\r\n          {countPositiveFeedbackPercentage(total)}%\r\n        </span>\r\n      </li>\r\n    </ul>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  feedbacks: PropTypes.objectOf(PropTypes.number).isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\nimport s from './FeedbackOptions.module.css';\r\n\r\nexport default function FeedbackOptions({ feedbacks, onLeaveFeedback }) {\r\n  const feedbackTitles = Object.keys(feedbacks);\r\n  return (\r\n    <>\r\n      {feedbackTitles.map(item => {\r\n        return (\r\n          <button\r\n            key={`${item}button`}\r\n            className={s.button}\r\n            type=\"button\"\r\n            value={item}\r\n            onClick={onLeaveFeedback}\r\n          >\r\n            {item}\r\n          </button>\r\n        );\r\n      })}\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  feedbacks: PropTypes.objectOf(PropTypes.number).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n","import { useState } from 'react';\n\nimport Section from './components/Section';\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const feedbacks = { good, neutral, bad };\n\n  const handleButtonClick = ({ target: { value } }) => {\n    switch (value) {\n      case 'good':\n        setGood(prev => prev + 1);\n        break;\n      case 'neutral':\n        setNeutral(prev => prev + 1);\n        break;\n      case 'bad':\n        setBad(prev => prev + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave Feedback\">\n        <FeedbackOptions\n          feedbacks={feedbacks}\n          onLeaveFeedback={handleButtonClick}\n        />\n      </Section>\n      <Section title=\"Statistics\">\n        <Statistics feedbacks={feedbacks} />\n      </Section>\n    </>\n  );\n}\n","import ReactDOM from 'react-dom';\nimport React from 'react';\nimport 'modern-normalize/modern-normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.querySelector('#root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__18ISR\",\"title\":\"Section_title__3OwRp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__-3rzr\"};"],"sourceRoot":""}